[tox]
envlist =
	py{38,39}-neo4j{4,5}-pandas{1,2}-main-{standard,encrypted},
	py{38,39}-pandas1-pyarrow{10,11,12,13,14}-main-{standard,encrypted},
	py310-pandas1-pyarrow{10,11,12,13,14}-main-{standard,encrypted},
	py311-pandas1-pyarrow{10,11,12,13,14}-main-{standard,encrypted},
	py{38,39,310,311}-pandas2-pyarrow{12,13,14}-main-{standard,encrypted},
	py312-pandas2-pyarrow14-main-{standard,encrypted},

	py{38,39}-neo4j{4,5}-pullrequest-{standard,encrypted},
	py{310,311,312}-pullrequest-{standard,encrypted},

	py311-main-aura,

	py38-neo4j{5}-pyarrow{14}-main-{cloud-architecture}
	py38-pullrequest-{cloud-architecture}

	# Vary networkx versions only for relevant tests
	py311-neo4j{4,5}-pandas1-pyarrow7-networkx{2,3}-main-nx
	py311-neo4j{4,5}-pandas2-pyarrow14-networkx{2,3}-main-nx
	py311-networkx3-pullrequest-nx

	jupyter-notebook-ci

[testenv]
passenv =
	NEO4J_URI
	NEO4J_USER
	NEO4J_PASSWORD
	NEO4J_DB
	NEO4J_AURA_DB_URI
allowlist_externals =
	ruby
	bash
	rm
deps =
	-r {toxinidir}/requirements/dev/test.txt
	neo4j4: neo4j >= 4.4.2, < 5.0
	neo4j5: neo4j >= 4.4.2, < 6.0
	pandas1: pandas >= 1.0, < 2.0
	pandas1: numpy == 1.24.3
	pandas2: pandas >= 2.0, < 3.0
	pyarrow10: pyarrow >= 10.0, < 11.0
	pyarrow11: pyarrow >= 11.0, < 12.0
	pyarrow12: pyarrow >= 12.0, < 13.0
	pyarrow13: pyarrow >= 13.0, < 14.0
	pyarrow14: pyarrow >= 14.0, < 15.0
	networkx2: networkx >= 2.0, < 3.0
	networkx3: networkx >= 3.0, < 4.0
commands =
	standard: bash -ec 'pytest graphdatascience/tests --include-enterprise --include-model-store-location -Werror && ruby ./doc/tests/test_docs.rb python3 -n test_enterprise && pytest ./doc/tests/test_client_only_endpoints.py -Werror'
	encrypted: pytest graphdatascience/tests --encrypted-only -Werror
	aura: pytest graphdatascience/tests --include-enterprise --target-aura -Werror
	ogb: pytest graphdatascience/tests --include-enterprise --include-ogb -Werror
	nx: bash -ec 'pytest graphdatascience/tests/*/test_nx_loader.py --include-enterprise -Werror && ruby ./doc/tests/test_docs.rb python3 -n test_networkx'
	cloud-architecture: pytest graphdatascience/tests --include-cloud-architecture -Werror
	rm -rf {envdir}/lib

[testenv:jupyter-notebook-ci]
passenv =
	NEO4J_URI
	NEO4J_USER
	NEO4J_PASSWORD
	NEO4J_DB
deps =
	-r {toxinidir}/requirements/dev/notebook-ci.txt
commands =
	python ./scripts/run_notebooks.py
